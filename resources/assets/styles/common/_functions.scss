//function

// rem()
//
// Convert pixel values to rems.
//
// $target    - Value to convert to ems.
// $context   - The context the conversion is based on. Defaults to `$base-font-size`
// @requires  - `$base-font-size` / `@strip-units`
// @returns   - number
// @source    - http://www.pjmccormick.com/sweet-sass-function-convert-px-em

@function rem ($target, $context: $base-font-size) {
  @if not unitless($target) {
    $target: strip-units($target);
  }

  @if not unitless($context) {
    $context: strip-units($context);
  }

  @if $target == 0 { @return 0; }

  @return $target / $context + rem;
}

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin fluid-type($min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;

      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }

      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}
